Fazer os redirections
<
>
<<
>>

Pipes |

handle ''
handle ""

?? Handle environment variables ($ followed by a sequence of characters) which
should expand to their values

$?

ctrl-C 
ctrl-D
crtl-\

echo com a opção de -n

cd com somente um caminho relativo ou absoluto

pwd com sem opções

export com sem opções

unset with sem opções

env com sem opções ou argumentos

exit com sem opções

o prompt tem que ficar esperando por um novo comando

deve ficar mostrando um histórico de trabalho

a função readline() pode causa leaks, mas não é pra arrumar ela, mas o seu código não pode dar leak

Avoid using more than one global variable to indicate a received signal. Consider
the implications: this approach ensures that your signal handler will not access your
main data structures

Not interpret unclosed quotes or special characters which are not required by the
subject such as \ (backslash) or ; (semicolon).

======================\\===============\\==========================
Funções permitidas
readline, rl_clear_history, rl_on_new_line,
rl_replace_line, rl_redisplay, add_history,
printf, malloc, free, write, access, open, read,
close, fork, wait, waitpid, wait3, wait4, signal,
sigaction, sigemptyset, sigaddset, kill, exit,
getcwd, chdir, stat, lstat, fstat, unlink, execve,
dup, dup2, pipe, opendir, readdir, closedir,
strerror, perror, isatty, ttyname, ttyslot, ioctl,
getenv, tcsetattr, tcgetattr, tgetent, tgetflag,
tgetnum, tgetstr, tgoto, tputs

Todo processo tem um pai quando um processo em execução faz uma chamada de sistema
fork() ou exec()

Aula 3 01:15:00=quando eu chamo ls no terminal, na hora de executar, 
ele abre um fork para executar o comando, fork é um clone do processo pai

Processos orfãos é quando o processo pai encerra e o filho continua em execuçãp
o PID 1 adota os processos órfãos (tipo coisas que ficam rodando em segundo plano)
(mas em processos no linux, não pode existir processos órfãos)

Processos zumbis
o processo pai não consegue interpretar o término do processo filho (exit)
Processo filho termina, mas continua na tabela de processos ativos.

para checar processos zumbis  = ps -ely | grep '^Z'

Como avisar o processo pai que o processo filho já terminou? terminal
kill -s SIGCHLD <PPID>

estágios de um processo
R - Em execução (run)
S - Sono interruptível
D - Sono não-interruptível (acesso a I/O)
T - Terminado ou suspenso
Z - Zumbi

I - (idle) indica que o processo está ocioso e não está consumindo cliclos de CPU

para ver sinais disponíveis
kill -l

type serve para mostrar como o comando seria executado, exemplo:
type apti
R: "aptu está apelidade para 'sudo apt install'

agora se eu utilizo type -a (nome do que eu quero), ele traz o que é aquele comando
+ os caminhos de onde pode encontrar aquele comando. (utilitário)

pstree é um comando para ver a árvore de processos

para melhorar a eficiencia de uma sistema, se usa thread 
(elas compartilham recursos do processo principal em que estão ligadas)

fazer tokenização, pesquisar como fazer em separar as palavras e operadores
regra de citação (regras das aspas)
\ este comando permite escapar para a próxima palavra para imprimir na tele 
tipo echo olá, \ mundo!
R: olá, mundo!
\ ` $ ! são 4 exceções dentro da "" aspas duplas, onde vc consegue escapar dentro
delas